{
  "cloudflare_config": {
    "domain": "sentrabase.id",
    "plan": "business",
    "security": {
      "waf_rules": [
        {
          "name": "Block XSS Attempts - SentraBASE",
          "expression": "(http.request.body contains \"<script>\" or http.request.uri.query contains \"<script>\" or http.request.body contains \"javascript:\" or http.request.body contains \"onerror=\" or http.request.body contains \"onload=\")",
          "action": "block",
          "priority": 1,
          "enabled": true,
          "description": "Comprehensive XSS protection for healthcare platform"
        },
        {
          "name": "Block SQL Injection - Healthcare Data",
          "expression": "(http.request.body contains \"union select\" or http.request.body contains \"drop table\" or http.request.body contains \"insert into\" or http.request.body contains \"delete from\" or http.request.body contains \"update set\")",
          "action": "block",
          "priority": 2,
          "enabled": true,
          "description": "Protect healthcare database from SQL injection"
        },
        {
          "name": "Demo Form Protection",
          "expression": "http.request.uri.path eq \"/api/demo/schedule\"",
          "action": "rate_limit",
          "priority": 3,
          "enabled": true,
          "rate_limit": {
            "requests_per_period": 3,
            "period": 600,
            "mitigation_timeout": 3600
          },
          "description": "Rate limit demo form submissions"
        },
        {
          "name": "Admin Panel Protection",
          "expression": "(http.request.uri.path contains \"/admin\" and not ip.src in $admin_whitelist)",
          "action": "challenge",
          "priority": 4,
          "enabled": true,
          "description": "Extra protection for admin areas"
        },
        {
          "name": "Healthcare API Protection",
          "expression": "(http.request.uri.path contains \"/api/patient\" or http.request.uri.path contains \"/api/medical\" or http.request.uri.path contains \"/api/records\")",
          "action": "challenge",
          "priority": 5,
          "enabled": true,
          "description": "Enhanced security for sensitive healthcare endpoints"
        },
        {
          "name": "Block Malicious Bots",
          "expression": "(http.user_agent contains \"sqlmap\" or http.user_agent contains \"nikto\" or http.user_agent contains \"nmap\" or http.user_agent contains \"masscan\")",
          "action": "block",
          "priority": 6,
          "enabled": true,
          "description": "Block known malicious scanning tools"
        }
      ],
      "rate_limiting": [
        {
          "name": "API General Rate Limit",
          "match": "http.request.uri.path contains \"/api/\"",
          "threshold": 100,
          "period": 60,
          "action": "challenge",
          "enabled": true
        },
        {
          "name": "Login Brute Force Protection",
          "match": "http.request.uri.path eq \"/api/auth/login\"",
          "threshold": 5,
          "period": 300,
          "action": "block",
          "duration": 1800,
          "enabled": true
        },
        {
          "name": "Form Submission Limit",
          "match": "http.request.method eq \"POST\"",
          "threshold": 20,
          "period": 60,
          "action": "challenge",
          "enabled": true
        }
      ],
      "access_rules": [
        {
          "name": "Block Known Bad IPs",
          "configuration": {
            "target": "ip",
            "value": "bad_ip_list",
            "action": "block"
          }
        },
        {
          "name": "Challenge Suspicious Countries",
          "configuration": {
            "target": "country",
            "value": ["CN", "RU", "KP"],
            "action": "challenge"
          }
        }
      ]
    },
    "ssl_tls": {
      "ssl_mode": "strict",
      "min_tls_version": "1.2",
      "hsts": {
        "enabled": true,
        "max_age": 31536000,
        "include_subdomains": true,
        "preload": true
      },
      "always_use_https": true,
      "certificate_transparency": true
    },
    "page_rules": [
      {
        "url": "sentrabase.id/api/*",
        "settings": {
          "cache_level": "bypass",
          "security_level": "high",
          "ssl": "strict",
          "always_use_https": true,
          "waf": "on"
        },
        "priority": 1
      },
      {
        "url": "sentrabase.id/admin/*",
        "settings": {
          "cache_level": "bypass",
          "security_level": "high",
          "ssl": "strict",
          "ip_geolocation": "on",
          "waf": "on",
          "browser_integrity_check": "on"
        },
        "priority": 2
      },
      {
        "url": "sentrabase.id/*.js",
        "settings": {
          "cache_level": "cache_everything",
          "edge_cache_ttl": 31536000,
          "browser_cache_ttl": 31536000
        },
        "priority": 3
      },
      {
        "url": "sentrabase.id/*.css",
        "settings": {
          "cache_level": "cache_everything",
          "edge_cache_ttl": 31536000,
          "browser_cache_ttl": 31536000
        },
        "priority": 4
      },
      {
        "url": "sentrabase.id/*",
        "settings": {
          "cache_level": "standard",
          "security_level": "medium",
          "ssl": "flexible",
          "always_use_https": true,
          "minify": {
            "html": true,
            "css": true,
            "js": true
          }
        },
        "priority": 5
      }
    ],
    "caching": {
      "cache_rules": [
        {
          "name": "Cache Static Assets",
          "expression": "http.request.uri.path matches \"\\\\.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$\"",
          "action": "cache",
          "cache_settings": {
            "cache_level": "cache_everything",
            "edge_cache_ttl": 31536000,
            "browser_cache_ttl": 31536000
          }
        },
        {
          "name": "Bypass API Cache",
          "expression": "http.request.uri.path contains \"/api/\"",
          "action": "bypass_cache"
        },
        {
          "name": "Cache HTML with Short TTL",
          "expression": "http.request.uri.path matches \"\\\\.(html|htm)$\" or http.request.uri.path eq \"/\"",
          "action": "cache",
          "cache_settings": {
            "cache_level": "cache_everything",
            "edge_cache_ttl": 300,
            "browser_cache_ttl": 0
          }
        }
      ]
    },
    "performance": {
      "argo": {
        "enabled": true,
        "smart_routing": true
      },
      "polish": {
        "enabled": true,
        "webp": true,
        "lossy": false
      },
      "mirage": {
        "enabled": true
      },
      "minify": {
        "html": true,
        "css": true,
        "js": true
      },
      "brotli": true,
      "http2": true,
      "http3": true
    },
    "security_headers": {
      "Content-Security-Policy": "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.sentrabase.id; frame-ancestors 'none'; base-uri 'self'; form-action 'self';",
      "X-Frame-Options": "DENY",
      "X-Content-Type-Options": "nosniff",
      "X-XSS-Protection": "1; mode=block",
      "Referrer-Policy": "strict-origin-when-cross-origin",
      "Permissions-Policy": "camera=(), microphone=(), geolocation=(), payment=()",
      "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload",
      "Expect-CT": "max-age=86400, enforce"
    },
    "analytics": {
      "web_analytics": true,
      "security_insights": true,
      "performance_insights": true,
      "bot_analytics": true
    },
    "alerts": [
      {
        "name": "DDoS Attack Alert",
        "alert_type": "ddos_attack_l7",
        "enabled": true,
        "webhooks": ["https://api.sentrabase.id/security/webhook"]
      },
      {
        "name": "WAF Block Alert",
        "alert_type": "waf_events_anomaly",
        "enabled": true,
        "webhooks": ["https://api.sentrabase.id/security/webhook"]
      },
      {
        "name": "SSL Certificate Expiry",
        "alert_type": "ssl_certificate_expiry_event",
        "enabled": true,
        "webhooks": ["https://api.sentrabase.id/security/webhook"]
      }
    ]
  },
  "deployment_checklist": [
    {
      "step": 1,
      "task": "Add domain to Cloudflare",
      "status": "pending",
      "priority": "critical"
    },
    {
      "step": 2,
      "task": "Update nameservers",
      "status": "pending",
      "priority": "critical"
    },
    {
      "step": 3,
      "task": "Configure SSL/TLS settings",
      "status": "pending",
      "priority": "critical"
    },
    {
      "step": 4,
      "task": "Set up WAF rules",
      "status": "pending",
      "priority": "high"
    },
    {
      "step": 5,
      "task": "Configure rate limiting",
      "status": "pending",
      "priority": "high"
    },
    {
      "step": 6,
      "task": "Set up page rules",
      "status": "pending",
      "priority": "medium"
    },
    {
      "step": 7,
      "task": "Configure caching rules",
      "status": "pending",
      "priority": "medium"
    },
    {
      "step": 8,
      "task": "Enable performance features",
      "status": "pending",
      "priority": "medium"
    },
    {
      "step": 9,
      "task": "Set up monitoring and alerts",
      "status": "pending",
      "priority": "low"
    },
    {
      "step": 10,
      "task": "Test and validate configuration",
      "status": "pending",
      "priority": "critical"
    }
  ]
}
